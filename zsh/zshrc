# alias
if [ -f ~/.zsh_aliases ]; then
    source ~/.zsh_aliases
fi

# 個別設定ファイルがあれば読み込む
if [ -f ~/.zshrc_local ]; then
  source ~/.zshrc_local
fi

# History
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
HISTIGNORE='history:pwd:ls:ll:exit'
setopt append_history      # 履歴を追記
setopt share_history       # 複数シェルで履歴共有

# starship
export STARSHIP_CONFIG="$HOME/.config/starship.toml"

# viモード（zle）
bindkey -v
# jjでInsert→Normal
bindkey -M viins 'jj' vi-cmd-mode

# Starship 初期化（多重初期化ガード）
if [[ -z ${STARSHIP_INIT_DONE-} ]]; then
  eval "$(starship init zsh)"
  typeset -g STARSHIP_INIT_DONE=1
fi

# --- カーソル形状をモードで出し分け（※ Starshipの関数は上書きしない）---
# 競合回避のため、zshの公式フック add-zle-hook-widget を使う
autoload -Uz add-zle-hook-widget
function _cursor_by_keymap {
  case $KEYMAP in
    vicmd)      printf '\e[1 q' ;;  # Normal: ブロック
    viins|main) printf '\e[5 q' ;;  # Insert: ビーム
    # visualなど他キーマップを追加したい場合はここにcaseを足す
  esac
}
add-zle-hook-widget zle-keymap-select _cursor_by_keymap
add-zle-hook-widget zle-line-init _cursor_by_keymap

# 起動直後のカーソル（Insert想定）
printf '\e[5 q'

# --- 補助: Homebrew の starship を優先（任意）---
# eval "$(/opt/homebrew/bin/brew shellenv)"  # 必要なら

# zoxide
eval "$(zoxide init zsh)"
# brew path
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/sbin:$PATH"

# pyenv
export PATH="$HOME/.pyenv/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
fi
